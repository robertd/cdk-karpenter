// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integ snapshot validation 1`] = `
Object {
  "Conditions": Object {
    "ClusterHasEcrPublic8EE1114E": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "AWS::Partition",
        },
        "aws",
      ],
    },
  },
  "Outputs": Object {
    "karpenterclusterName04F6FBCD": Object {
      "Value": Object {
        "Ref": "Cluster9EE0221C",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": Object {
      "DependsOn": Array [
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
          },
          "S3Key": "70dc346d78f37c98f818c01173252d7441864d42268efd4ee44769cbd6f31d24.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Cluster9EE0221C": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ClusterCreationRoleDefaultPolicyE8BDFC7B",
        "ClusterCreationRole360249B6",
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "ClusterCreationRole360249B6",
            "Arn",
          ],
        },
        "AttributesRevision": 2,
        "Config": Object {
          "kubernetesNetworkConfig": Object {
            "ipFamily": "ipv4",
          },
          "resourcesVpcConfig": Object {
            "endpointPrivateAccess": true,
            "endpointPublicAccess": true,
            "securityGroupIds": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ClusterControlPlaneSecurityGroupD274242C",
                  "GroupId",
                ],
              },
            ],
            "subnetIds": Array [
              Object {
                "Ref": "VPCPublicSubnet1SubnetB4246D30",
              },
              Object {
                "Ref": "VPCPublicSubnet2Subnet74179F39",
              },
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
            ],
          },
          "roleArn": Object {
            "Fn::GetAtt": Array [
              "ClusterRoleFA261979",
              "Arn",
            ],
          },
          "version": "1.21",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.StackawscdkawseksClusterResourceProviderframeworkonEvent9D6CED48Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "UpdateReplacePolicy": "Delete",
    },
    "ClusterAwsAuthmanifestFE51F8AE": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ClusterKubectlReadyBarrier200052AF",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "Cluster9EE0221C",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"aws-auth\\",\\"namespace\\":\\"kube-system\\"},\\"data\\":{\\"mapRoles\\":\\"[{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "karpenterNodeRole086B4B2F",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]}]\\",\\"mapUsers\\":\\"[]\\",\\"mapAccounts\\":\\"[]\\"}}]",
            ],
          ],
        },
        "Overwrite": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ClusterCreationRole360249B6",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.StackawscdkawseksKubectlProviderframeworkonEvent8897FD9BArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ClusterControlPlaneSecurityGroupD274242C": Object {
      "Properties": Object {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ClusterCreationRole360249B6": Object {
      "DependsOn": Array [
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                    "Outputs.StackawscdkawseksClusterResourceProviderOnEventHandlerServiceRole3AEE0A43Arn",
                  ],
                },
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                    "Outputs.StackawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRole8E7F1C11Arn",
                  ],
                },
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "ClusterKubectlHandlerRole94549F93",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ClusterCreationRoleDefaultPolicyE8BDFC7B": Object {
      "DependsOn": Array [
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ClusterRoleFA261979",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource",
              ],
              "Effect": "Allow",
              "Resource": Array [
                "*",
              ],
            },
            Object {
              "Action": Array [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:GetRole",
                "iam:listAttachedRolePolicies",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ClusterCreationRoleDefaultPolicyE8BDFC7B",
        "Roles": Array [
          Object {
            "Ref": "ClusterCreationRole360249B6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ClusterKubectlHandlerRole94549F93": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
          Object {
            "Fn::If": Array [
              "ClusterHasEcrPublic8EE1114E",
              Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly",
                  ],
                ],
              },
              Object {
                "Ref": "AWS::NoValue",
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ClusterKubectlHandlerRoleDefaultPolicyE44083DD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "eks:DescribeCluster",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "Cluster9EE0221C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ClusterCreationRole360249B6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ClusterKubectlHandlerRoleDefaultPolicyE44083DD",
        "Roles": Array [
          Object {
            "Ref": "ClusterKubectlHandlerRole94549F93",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ClusterKubectlReadyBarrier200052AF": Object {
      "DependsOn": Array [
        "ClusterCreationRoleDefaultPolicyE8BDFC7B",
        "ClusterCreationRole360249B6",
        "Cluster9EE0221C",
      ],
      "Properties": Object {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "ClusterNodegroupDefaultCapacityDA0920A3": Object {
      "Properties": Object {
        "AmiType": "AL2_x86_64",
        "ClusterName": Object {
          "Ref": "Cluster9EE0221C",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": Array [
          "m5.large",
        ],
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04",
            "Arn",
          ],
        },
        "ScalingConfig": Object {
          "DesiredSize": 2,
          "MaxSize": 2,
          "MinSize": 2,
        },
        "Subnets": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
        ],
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ClusterOpenIdConnectProviderE7EB0530": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClientIDList": Array [
          "sts.amazonaws.com",
        ],
        "CodeHash": "977fc1649d2dbcce16e23f6332faef6fa0f48aa74a0afe35f4a3467754e20cd8",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
            "Arn",
          ],
        },
        "Url": Object {
          "Fn::GetAtt": Array [
            "Cluster9EE0221C",
            "OpenIdConnectIssuerUrl",
          ],
        },
      },
      "Type": "Custom::AWSCDKOpenIdConnectProvider",
      "UpdateReplacePolicy": "Delete",
    },
    "ClusterRoleFA261979": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Clustermanifestcustom7D91FEAB": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ClusterKubectlReadyBarrier200052AF",
        "ClustermanifestcustomawsnodetemplateD0F4FB53",
        "karpenterKarpenterHelmChart14F968A6",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "Cluster9EE0221C",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"karpenter.sh/v1alpha5\\",\\"kind\\":\\"Provisioner\\",\\"metadata\\":{\\"name\\":\\"custom\\"},\\"spec\\":{\\"limits\\":{\\"resources\\":{\\"mem\\":\\"1000Gi\\",\\"cpu\\":\\"1\\"}},\\"ttlSecondsAfterEmpty\\":7200,\\"ttlSecondsUntilExpired\\":7776000,\\"requirements\\":[{\\"key\\":\\"karpenter.sh/capacity-type\\",\\"operator\\":\\"In\\",\\"values\\":[\\"spot\\"]},{\\"key\\":\\"kubernetes.io/arch\\",\\"operator\\":\\"In\\",\\"values\\":[\\"amd64\\",\\"arm64\\"]},{\\"key\\":\\"topology.kubernetes.io/zone\\",\\"operator\\":\\"In\\",\\"values\\":[\\"",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::GetAZs": "",
                  },
                ],
              },
              "\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::GetAZs": "",
                  },
                ],
              },
              "\\"]},{\\"key\\":\\"node.kubernetes.io/instance-type\\",\\"operator\\":\\"In\\",\\"values\\":[\\"m5.large\\",\\"m5a.large\\",\\"m6g.large\\"]},{\\"key\\":\\"node.kubernetes.io/instance-type\\",\\"operator\\":\\"NotIn\\",\\"values\\":[\\"g5.large\\"]}],\\"labels\\":{\\"cluster-name\\":\\"",
              Object {
                "Ref": "Cluster9EE0221C",
              },
              "\\",\\"billing\\":\\"my-team\\"},\\"taints\\":[{\\"key\\":\\"example.com/special-taint\\",\\"effect\\":\\"NoSchedule\\"}],\\"startupTaints\\":[{\\"key\\":\\"example.com/another-taint\\",\\"effect\\":\\"NoSchedule\\"}],\\"providerRef\\":{\\"name\\":\\"custom-awsnodetemplate\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ClusterCreationRole360249B6",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.StackawscdkawseksKubectlProviderframeworkonEvent8897FD9BArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ClustermanifestcustomawsnodetemplateD0F4FB53": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ClusterKubectlReadyBarrier200052AF",
        "karpenterKarpenterHelmChart14F968A6",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "Cluster9EE0221C",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"karpenter.k8s.aws/v1alpha1\\",\\"kind\\":\\"AWSNodeTemplate\\",\\"metadata\\":{\\"name\\":\\"custom-awsnodetemplate\\"},\\"spec\\":{\\"subnetSelector\\":{\\"karpenter.sh/discovery/",
              Object {
                "Ref": "Cluster9EE0221C",
              },
              "\\":\\"*\\"},\\"securityGroupSelector\\":{\\"kubernetes.io/cluster/",
              Object {
                "Ref": "Cluster9EE0221C",
              },
              "\\":\\"owned\\"},\\"instanceProfile\\":\\"",
              Object {
                "Ref": "karpenterInstanceProfile13C1F80D",
              },
              "\\",\\"amiFamily\\":\\"AL2\\",\\"tags\\":{\\"Foo\\":\\"Bar\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ClusterCreationRole360249B6",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.StackawscdkawseksKubectlProviderframeworkonEvent8897FD9BArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ClustermanifestdefaultC118B552": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ClusterKubectlReadyBarrier200052AF",
        "ClustermanifestdefaultawsnodetemplateB531B369",
        "karpenterKarpenterHelmChart14F968A6",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "Cluster9EE0221C",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"karpenter.sh/v1alpha5\\",\\"kind\\":\\"Provisioner\\",\\"metadata\\":{\\"name\\":\\"default\\"},\\"spec\\":{\\"requirements\\":[{\\"key\\":\\"karpenter.sh/capacity-type\\",\\"operator\\":\\"In\\",\\"values\\":[\\"spot\\"]},{\\"key\\":\\"kubernetes.io/arch\\",\\"operator\\":\\"In\\",\\"values\\":[\\"amd64\\"]},{\\"key\\":\\"topology.kubernetes.io/zone\\",\\"operator\\":\\"In\\",\\"values\\":[\\"",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::GetAZs": "",
                  },
                ],
              },
              "\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::GetAZs": "",
                  },
                ],
              },
              "\\"]}],\\"labels\\":{\\"cluster-name\\":\\"",
              Object {
                "Ref": "Cluster9EE0221C",
              },
              "\\"},\\"providerRef\\":{\\"name\\":\\"default-awsnodetemplate\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ClusterCreationRole360249B6",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.StackawscdkawseksKubectlProviderframeworkonEvent8897FD9BArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ClustermanifestdefaultawsnodetemplateB531B369": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ClusterKubectlReadyBarrier200052AF",
        "karpenterKarpenterHelmChart14F968A6",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "Cluster9EE0221C",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"karpenter.k8s.aws/v1alpha1\\",\\"kind\\":\\"AWSNodeTemplate\\",\\"metadata\\":{\\"name\\":\\"default-awsnodetemplate\\"},\\"spec\\":{\\"subnetSelector\\":{\\"karpenter.sh/discovery/",
              Object {
                "Ref": "Cluster9EE0221C",
              },
              "\\":\\"*\\"},\\"securityGroupSelector\\":{\\"kubernetes.io/cluster/",
              Object {
                "Ref": "Cluster9EE0221C",
              },
              "\\":\\"owned\\"},\\"instanceProfile\\":\\"",
              Object {
                "Ref": "karpenterInstanceProfile13C1F80D",
              },
              "\\"}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ClusterCreationRole360249B6",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.StackawscdkawseksKubectlProviderframeworkonEvent8897FD9BArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": Object {
      "DependsOn": Array [
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
          },
          "S3Key": "977fc1649d2dbcce16e23f6332faef6fa0f48aa74a0afe35f4a3467754e20cd8.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "iam:CreateOpenIDConnectProvider",
                    "iam:DeleteOpenIDConnectProvider",
                    "iam:UpdateOpenIDConnectProviderThumbprint",
                    "iam:AddClientIDToOpenIDConnectProvider",
                    "iam:RemoveClientIDFromOpenIDConnectProvider",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
          },
          "S3Key": "4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Stack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Stack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.us-west-2.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
              },
              "/5dedb5392b410b235974f7df860ae5213c9cb28c04d463d3a897e38530a31277.json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ClusterKubectlHandlerRoleDefaultPolicyE44083DD",
        "ClusterKubectlHandlerRole94549F93",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "Parameters": Object {
          "referencetoStackCluster979F48BAClusterSecurityGroupId": Object {
            "Fn::GetAtt": Array [
              "Cluster9EE0221C",
              "ClusterSecurityGroupId",
            ],
          },
          "referencetoStackClusterKubectlHandlerRoleD587D45BArn": Object {
            "Fn::GetAtt": Array [
              "ClusterKubectlHandlerRole94549F93",
              "Arn",
            ],
          },
          "referencetoStackVPCPrivateSubnet1Subnet211AFA66Ref": Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          "referencetoStackVPCPrivateSubnet2Subnet40D7F1E3Ref": Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.us-west-2.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
              },
              "/ad7b4424cef020372f0332109286b712e06a7dc523f31b8a5e83dbda726176f8.json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "karpenterConditionPlainJsonC2FAD26E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      ":oidc-provider/",
                      Object {
                        "Ref": "ClusterOpenIdConnectProviderE7EB0530",
                      },
                    ],
                  },
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      ":oidc-provider/",
                      Object {
                        "Ref": "ClusterOpenIdConnectProviderE7EB0530",
                      },
                    ],
                  },
                ],
              },
              ":sub\\":\\"system:serviceaccount:karpenter:karpenter\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "karpenterControllerPolicyA6C7C5DE": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:CreateFleet",
                "ec2:CreateLaunchTemplate",
                "ec2:CreateTags",
                "ec2:DeleteLaunchTemplate",
                "ec2:RunInstances",
                "ec2:TerminateInstances",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeImages",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceTypeOfferings",
                "ec2:DescribeInstanceTypes",
                "ec2:DescribeLaunchTemplates",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSpotPriceHistory",
                "ec2:DescribeSubnets",
                "pricing:GetProducts",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "karpenterInterruptionQueueC4CC9BE1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "karpenterNodeRole086B4B2F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "eks:DescribeCluster",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "Cluster9EE0221C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "karpenterControllerRole06530798": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "karpenterConditionPlainJsonC2FAD26E",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "ClusterOpenIdConnectProviderE7EB0530",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "This is the IAM role Karpenter uses to allocate compute for ",
              Object {
                "Ref": "Cluster9EE0221C",
              },
            ],
          ],
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "karpenterControllerPolicyA6C7C5DE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "karpenterInstanceProfile13C1F80D": Object {
      "Properties": Object {
        "Path": "/",
        "Roles": Array [
          Object {
            "Ref": "karpenterNodeRole086B4B2F",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "karpenterInstanceStateChangeRule31905394": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail-type": Array [
            "EC2 Instance State-change Notification",
          ],
          "source": Array [
            "aws.ec2",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "karpenterInterruptionQueueC4CC9BE1",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "karpenterInterruptionQueueC4CC9BE1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "MessageRetentionPeriod": 300,
        "QueueName": Object {
          "Ref": "Cluster9EE0221C",
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "karpenterInterruptionQueuePolicy2D1D4545": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Array [
                  "events.amazonaws.com",
                  "sqs.amazonaws.com",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Condition": Object {
                "ArnEquals": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "karpenterScheduledChangeRuleD6254BB3",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "karpenterInterruptionQueueC4CC9BE1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Condition": Object {
                "ArnEquals": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "karpenterSpotInterruptionRule55F38CD3",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "karpenterInterruptionQueueC4CC9BE1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Condition": Object {
                "ArnEquals": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "karpenterRebalanceRule264672C7",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "karpenterInterruptionQueueC4CC9BE1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Condition": Object {
                "ArnEquals": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "karpenterInstanceStateChangeRule31905394",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "karpenterInterruptionQueueC4CC9BE1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "karpenterInterruptionQueueC4CC9BE1",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "karpenterKarpenterHelmChart14F968A6": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ClusterKubectlReadyBarrier200052AF",
      ],
      "Properties": Object {
        "Chart": "karpenter",
        "ClusterName": Object {
          "Ref": "Cluster9EE0221C",
        },
        "CreateNamespace": true,
        "Namespace": "karpenter",
        "Release": "karpenter",
        "Repository": "oci://public.ecr.aws/karpenter/karpenter",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ClusterCreationRole360249B6",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.StackawscdkawseksKubectlProviderframeworkonEvent8897FD9BArn",
          ],
        },
        "Timeout": "900s",
        "Values": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"serviceAccount\\":{\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "karpenterControllerRole06530798",
                  "Arn",
                ],
              },
              "\\"}},\\"settings\\":{\\"aws\\":{\\"clusterName\\":\\"",
              Object {
                "Ref": "Cluster9EE0221C",
              },
              "\\",\\"interruptionQueueName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "karpenterInterruptionQueueC4CC9BE1",
                  "QueueName",
                ],
              },
              "\\",\\"defaultInstanceProfile\\":\\"",
              Object {
                "Ref": "karpenterInstanceProfile13C1F80D",
              },
              "\\"}}}",
            ],
          ],
        },
        "Version": "v0.27.5",
        "Wait": true,
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "karpenterNodeRole086B4B2F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "This is the IAM role Karpenter uses to give compute permissions for ",
              Object {
                "Ref": "Cluster9EE0221C",
              },
            ],
          ],
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "karpenterRebalanceRule264672C7": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail-type": Array [
            "EC2 Instance Rebalance Recommendation",
          ],
          "source": Array [
            "aws.ec2",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "karpenterInterruptionQueueC4CC9BE1",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "karpenterScheduledChangeRuleD6254BB3": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail-type": Array [
            "AWS Health Event",
          ],
          "source": Array [
            "aws.health",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "karpenterInterruptionQueueC4CC9BE1",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "karpenterSpotInterruptionRule55F38CD3": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail-type": Array [
            "EC2 Spot Instance Interruption Warning",
          ],
          "source": Array [
            "aws.ec2",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "karpenterInterruptionQueueC4CC9BE1",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "karpenterTagSubnets67CF00B1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "karpenterTagSubnetsProviderframeworkonEvent9A8262CC",
            "Arn",
          ],
        },
        "clusterTag": Object {
          "Fn::Join": Array [
            "",
            Array [
              "karpenter.sh/discovery/",
              Object {
                "Ref": "Cluster9EE0221C",
              },
            ],
          ],
        },
        "stackName": "Stack",
        "subnets": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "karpenterTagSubnetsFunction9F1EEF47": Object {
      "DependsOn": Array [
        "karpenterTagSubnetsFunctionServiceRoleDefaultPolicy67B2022F",
        "karpenterTagSubnetsFunctionServiceRoleBCFA36AD",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3
import logging as log
log.getLogger().setLevel(log.INFO)
import cfnresponse

def on_event(event, context):
    print(event)
    request_type = event.get(\\"RequestType\\")
    if request_type == \\"Create\\":
        return on_create(event)
    if request_type == \\"Update\\":
        return on_update(event)
    if request_type == \\"Delete\\":
        return on_delete(event)
    raise Exception(\\"Invalid request type: %s\\" % request_type)

def on_create(event):
    ec2_resource = boto3.resource('ec2')
    subnets = event['ResourceProperties']['subnets']
    cluster_tag = event['ResourceProperties']['clusterTag']

    for subnet_id in subnets:
        subnet = ec2_resource.Subnet(subnet_id)
        subnet.create_tags(
            Tags=[
                {
                    'Key': cluster_tag,
                    'Value': '1'
                }
            ]
        )
    
    return {\\"Message\\": cluster_tag}

def on_update(event):
    ec2_client = boto3.client('ec2')
    ec2_resource = boto3.resource('ec2')

    subnets = event['ResourceProperties']['subnets']
    cluster_tag = event['ResourceProperties']['clusterTag']
    
    query_subnets = ec2_client.describe_subnets(Filters=[{\\"Name\\": f\\"tag:{cluster_tag}\\", \\"Values\\": [\\"\\"]}])[\\"Subnets\\"]
    existing_subnets = map(lambda x: x['SubnetId'], query_subnets)

    remove_from_subnets = list(set(existing_subnets) - set(subnets))
    for subnet_id in remove_from_subnets:
        subnet = ec2_resource.Subnet(subnet_id)
        ec2_client.delete_tags(Resources=[subnet.id],Tags=[{\\"Key\\": cluster_tag }])

    add_to_subnets = list(set(subnets) - set(existing_subnets))
    for subnet_id in add_to_subnets:
        subnet = ec2_resource.Subnet(subnet_id)
        subnet.create_tags(
            Tags=[
                {
                    'Key': cluster_tag,
                    'Value': '1'
                }
            ]
        )

    return {\\"Message\\": cluster_tag}

def on_delete(event):
    ec2_client = boto3.client('ec2')
    ec2_resource = boto3.resource('ec2')
    subnets = event['ResourceProperties']['subnets']
    cluster_tag = event['ResourceProperties']['clusterTag']

    for subnet_id in subnets:
        subnet = ec2_resource.Subnet(subnet_id)
        ec2_client.delete_tags(Resources=[subnet.id],Tags=[{\\"Key\\": cluster_tag }])

    return {\\"Message\\": cluster_tag}
",
        },
        "Description": "Function for tagging clusters for Karpenter.",
        "Handler": "index.on_event",
        "Role": Object {
          "Fn::GetAtt": Array [
            "karpenterTagSubnetsFunctionServiceRoleBCFA36AD",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "karpenterTagSubnetsFunctionLogRetention250C198D": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "karpenterTagSubnetsFunction9F1EEF47",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "karpenterTagSubnetsFunctionServiceRoleBCFA36AD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "karpenterTagSubnetsFunctionServiceRoleDefaultPolicy67B2022F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:DescribeSubnets",
                "ec2:CreateTags",
                "ec2:DeleteTags",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "karpenterTagSubnetsFunctionServiceRoleDefaultPolicy67B2022F",
        "Roles": Array [
          Object {
            "Ref": "karpenterTagSubnetsFunctionServiceRoleBCFA36AD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "karpenterTagSubnetsProviderframeworkonEvent9A8262CC": Object {
      "DependsOn": Array [
        "karpenterTagSubnetsProviderframeworkonEventServiceRoleDefaultPolicyE1B06ED9",
        "karpenterTagSubnetsProviderframeworkonEventServiceRole3A124194",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-west-2",
          },
          "S3Key": "3542be390685e0c8353d92ccb5796d343cd93ca946b6b0de798004206a199adc.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (Stack/karpenter/TagSubnets/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "karpenterTagSubnetsFunction9F1EEF47",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "karpenterTagSubnetsProviderframeworkonEventServiceRole3A124194",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "karpenterTagSubnetsProviderframeworkonEventLogRetentionCA75B048": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "karpenterTagSubnetsProviderframeworkonEvent9A8262CC",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "karpenterTagSubnetsProviderframeworkonEventServiceRole3A124194": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "karpenterTagSubnetsProviderframeworkonEventServiceRoleDefaultPolicyE1B06ED9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "karpenterTagSubnetsFunction9F1EEF47",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "karpenterTagSubnetsFunction9F1EEF47",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "karpenterTagSubnetsProviderframeworkonEventServiceRoleDefaultPolicyE1B06ED9",
        "Roles": Array [
          Object {
            "Ref": "karpenterTagSubnetsProviderframeworkonEventServiceRole3A124194",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
